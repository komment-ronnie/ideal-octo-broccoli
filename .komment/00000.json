[
  {
    "name": "file.js",
    "path": "file.js",
    "content": {
      "structured": {
        "description": "Various utility functions that perform arithmetic operations, mathematical calculations, data manipulation, and string processing. It includes implementations for calculating factorial, checking primality, converting Celsius to Fahrenheit, finding the maximum value in an array, reversing strings, determining palindromes, generating random numbers, calculating circle areas, counting occurrences of elements in arrays, and capitalizing words.",
        "items": [
          {
            "id": "094873af-8bc8-3bab-5744-91b286cb53e4",
            "ancestors": [],
            "description": "Calculates the factorial of a given integer `n`. It does so by recursively multiplying `n` with the factorial of `n-1`, until it reaches the base case of `n === 0` or `n === 1`, at which point it returns 1.",
            "params": [
              {
                "name": "n",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "An input value for calculating factorial."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The product of all positive integers from 1 to n. If n is 0 or 1, it returns 1. For other values of n, it recursively calculates the factorial as a multiplication of n and the factorial of (n-1)."
            },
            "usage": {
              "language": "javascript",
              "code": "factorial(5);\n",
              "description": ""
            },
            "name": "factorial",
            "location": {
              "start": 13,
              "insert": 2,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 1,
                "end": 12
              }
            },
            "item_type": "function",
            "length": 7,
            "docLength": 11
          },
          {
            "id": "a2ac5955-c2e1-1fb3-a047-78ea6929c3dc",
            "ancestors": [],
            "description": "Determines whether a given integer is a prime number or not. It returns `false` if the input number is less than or equal to 1, and checks for divisibility up to the square root of the number. If no divisor is found, it returns `true`.",
            "params": [
              {
                "name": "num",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Being checked for primality."
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "`true` if the input number is prime and `false` otherwise."
            },
            "usage": {
              "language": "javascript",
              "code": "let result = isPrime(25);\n",
              "description": "\n\nThis will check if the number 25 is a prime number or not."
            },
            "name": "isPrime",
            "location": {
              "start": 32,
              "insert": 21,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 20,
                "end": 31
              }
            },
            "item_type": "function",
            "length": 7,
            "docLength": 11
          },
          {
            "id": "7f8a470c-43fa-8aa8-894a-b91bcab15ebd",
            "ancestors": [],
            "description": "Converts a temperature from Celsius to Fahrenheit by multiplying the input value by 9, dividing by 5, and then adding 32.",
            "params": [
              {
                "name": "celsius",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Temperature value to be converted."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "9 times the input celsius value divided by 5 and then added to 32. The result represents the temperature in Fahrenheit scale."
            },
            "usage": {
              "language": "javascript",
              "code": "var fahrenheit = celsiusToFahrenheit(30);\n",
              "description": "\n"
            },
            "name": "celsiusToFahrenheit",
            "location": {
              "start": 40,
              "insert": 40,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "1f003d26-00d6-04ad-2941-0f7ba1b0c913",
            "ancestors": [],
            "description": "Determines the maximum value within an array of numbers by iterating through each element and comparing it with the current maximum value, updating the maximum if a larger value is found, until all elements have been checked.",
            "params": [
              {
                "name": "arr",
                "default_value": null,
                "optional": false,
                "type_name": "number[]",
                "description": "An array to be searched for maximum value."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The maximum element present in the array."
            },
            "usage": {
              "language": "javascript",
              "code": "let numbers = [4, 2, 9, 6, 5];\nlet maxNumber = findMax(numbers);\n// maxNumber now holds the value 9",
              "description": ""
            },
            "name": "findMax",
            "location": {
              "start": 53,
              "insert": 44,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 43,
                "end": 52
              }
            },
            "item_type": "function",
            "length": 9,
            "docLength": 9
          },
          {
            "id": "c5ee298e-ea69-bb83-c647-df28a9c2b4e1",
            "ancestors": [],
            "description": "Takes a string as input and returns the reversed version of that string. It does this by splitting the input string into an array of individual characters, reversing the order of the characters in the array, and then joining the characters back together into a new string.",
            "params": [
              {
                "name": "str",
                "default_value": null,
                "optional": false,
                "type_name": "string",
                "description": "Input to be reversed."
              }
            ],
            "returns": {
              "type_name": "string",
              "description": "The input string with its characters reversed."
            },
            "usage": {
              "language": "javascript",
              "code": "var reversed = reverseString(\"Hello World\");\n",
              "description": ""
            },
            "name": "reverseString",
            "location": {
              "start": 63,
              "insert": 63,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "f437b9f0-b2f0-7aab-614a-05b6a3e25ed3",
            "ancestors": [],
            "description": "Checks whether a given string is a palindrome by comparing it with its reversed version, which is obtained using the `reverseString` function. It returns a boolean value indicating whether the input string is a palindrome or not.",
            "params": [
              {
                "name": "str",
                "default_value": null,
                "optional": false,
                "type_name": "string",
                "description": "The input string to be checked for palindrome property."
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "True if the input string is equal to its reverse, and false otherwise."
            },
            "usage": {
              "language": "javascript",
              "code": "isPalindrome(\"madam\"); // Returns true if \"madam\" is a palindrome, false otherwise.",
              "description": ""
            },
            "name": "isPalindrome",
            "location": {
              "start": 67,
              "insert": 67,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "bc1628f1-1bbd-679d-d043-359407739bca",
            "ancestors": [],
            "description": "Generates a random integer within a specified range defined by the input parameters `min` and `max`. The generated number is inclusive for both bounds, meaning it can equal either `min` or `max` with an equal probability.",
            "params": [
              {
                "name": "min",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Inclusive in the generated random range."
              },
              {
                "name": "max",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "1 more than the maximum possible random number value."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "A random integer within the range of `min` and `max` inclusive."
            },
            "usage": {
              "language": "javascript",
              "code": "let random = getRandomNumber(1, 6);\nalert(random);\n",
              "description": ""
            },
            "name": "getRandomNumber",
            "location": {
              "start": 71,
              "insert": 71,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "a710b6d6-037c-d0bc-2144-e789784744c6",
            "ancestors": [],
            "description": "Calculates the area of a circle given its radius. It uses the mathematical formula for the area of a circle (πr^2) and returns the result as a value.",
            "params": [
              {
                "name": "radius",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Used to calculate the area of a circle."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The area of a circle calculated using its radius."
            },
            "usage": {
              "language": "javascript",
              "code": "const area = calculateCircleArea(5);\n",
              "description": ""
            },
            "name": "calculateCircleArea",
            "location": {
              "start": 75,
              "insert": 75,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "421b407c-ba37-419c-e549-a0cb9be22261",
            "ancestors": [],
            "description": "Aggregates the occurrences of each element in an array by using the `reduce` method to create a new object with the elements as keys and their respective counts as values.",
            "params": [
              {
                "name": "arr",
                "default_value": null,
                "optional": false,
                "type_name": "(string | number | boolean | object | symbol)[]",
                "description": "An array to count occurrences in."
              }
            ],
            "returns": {
              "type_name": "any",
              "description": "An object where each property represents a unique value from the input array and its corresponding property value is the number of occurrences of that value in the array."
            },
            "usage": {
              "language": "javascript",
              "code": "const occurrences = countOccurrences([1, 2, 3, 4, 2]);\n",
              "description": ""
            },
            "name": "countOccurrences",
            "location": {
              "start": 91,
              "insert": 79,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 78,
                "end": 90
              }
            },
            "item_type": "function",
            "length": 10,
            "docLength": 12
          },
          {
            "id": "7ccef945-f6d9-4c8b-f24f-958f648c17e4",
            "ancestors": [
              "421b407c-ba37-419c-e549-a0cb9be22261"
            ],
            "description": "Counts occurrences.",
            "name": null,
            "location": {
              "start": 92,
              "insert": 93,
              "offset": " ",
              "indent": 8,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 8,
            "docLength": null
          },
          {
            "id": "d5583b8d-6602-38b0-2948-7b698b7553d1",
            "ancestors": [],
            "description": "Capitalizes each word in a given `sentence`, splitting it into individual words, applying the transformation to each word, and then joining them back together with spaces.",
            "params": [
              {
                "name": "sentence",
                "default_value": null,
                "optional": false,
                "type_name": "string",
                "description": "Intended for capitalization."
              }
            ],
            "returns": {
              "type_name": "string",
              "description": "The input sentence with all its words capitalized at their first letter and the rest as lowercase."
            },
            "usage": {
              "language": "javascript",
              "code": "const output = capitalizeWords('hello world');\n",
              "description": ""
            },
            "name": "capitalizeWords",
            "location": {
              "start": 102,
              "insert": 102,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "sample.ts",
    "path": "sample.ts",
    "content": {
      "structured": {
        "description": "Two custom mathematical functions add and sin, which are then combined into an array. The results are rendered as an unordered list in a React component. The component uses the Math library for sine calculations and React's FC (functional component) type to define the component. The code provides a simple visualization of the calculated values.",
        "items": [
          {
            "id": "c06de6ce-b643-92b6-5442-21386abdcaad",
            "ancestors": [],
            "description": "Defines two custom functions, `add` and `sin`, for basic arithmetic and trigonometric operations. It then uses these functions to generate an array of results and renders them as a list within an HTML element.",
            "params": [],
            "returns": {
              "type_name": "number",
              "description": "8 (the sum of 5 and 3) for the first item in the results array and a floating point number near to 1 (the sine of π/2) for the second item."
            },
            "usage": {
              "language": "typescript",
              "code": "const app = <MathComponent />;\nReactDOM.render(app, document.getElementById('root'));\n",
              "description": ""
            },
            "name": "MathComponent",
            "location": {
              "start": 10,
              "insert": 2,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 1,
                "end": 9
              }
            },
            "item_type": "function",
            "length": 22,
            "docLength": 8
          },
          {
            "id": "7ae5d594-bffd-73b1-8144-52a07302fd4e",
            "ancestors": [
              "c06de6ce-b643-92b6-5442-21386abdcaad"
            ],
            "description": "Takes two numeric arguments, `a` and `b`, and returns their sum as an integer value. It is a simple arithmetic operation that combines the values of both inputs into a single output.",
            "params": [
              {
                "name": "a",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Added to another number `b`."
              },
              {
                "name": "b",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Added to the value of `a`."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The result of the arithmetic operation performed on its input values."
            },
            "usage": {
              "language": "typescript",
              "code": "const sum = add(10, 20);\n",
              "description": ""
            },
            "name": "add",
            "location": {
              "start": 11,
              "insert": 11,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "6a4d5620-528c-b7b5-3547-5591b3aba5a6",
            "ancestors": [
              "c06de6ce-b643-92b6-5442-21386abdcaad"
            ],
            "description": "Calculates and returns the sine of a given angle `a` in radians. The result is a numeric value between -1 and 1, representing the trigonometric sine operation.",
            "params": [
              {
                "name": "a",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "An input angle for sine calculation."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The sine of the input angle `a`, represented as a mathematical constant in radians."
            },
            "usage": {
              "language": "typescript",
              "code": "const angle = Math.PI / 2;\nconst result = sin(angle);\n",
              "description": ""
            },
            "name": "sin",
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          }
        ]
      }
    }
  }
]