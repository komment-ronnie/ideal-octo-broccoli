[
  {
    "name": "file.js",
    "path": "file.js",
    "content": {
      "structured": {
        "description": "Several functions that perform various mathematical operations and data transformations. The code includes implementations for calculating factorial, checking primality, converting between Celsius and Fahrenheit, finding the maximum value in an array, reversing strings, checking palindromes, generating random numbers, and calculating circle areas. Additionally, it provides a function to count occurrences of elements in an array and capitalize words in a sentence.",
        "items": [
          {
            "id": "903d43f9-5309-2d8f-784b-6fe2f7321444",
            "ancestors": [],
            "description": "Calculates the factorial of a given non-negative integer `n`. It returns the product of all positive integers from 1 to `n`, recursively multiplying each number by the result of the factorial of the previous number.",
            "params": [
              {
                "name": "n",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "0 or positive integer, representing a number to calculate factorial for."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The result of multiplying all positive integers up to the input number together, starting from 1."
            },
            "usage": {
              "language": "javascript",
              "code": "const result = factorial(5);\n",
              "description": ""
            },
            "name": "factorial",
            "location": {
              "start": 2,
              "insert": 2,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 7,
            "docLength": null
          },
          {
            "id": "3b2b0851-fd36-6992-c44e-44f7d9bfe357",
            "ancestors": [],
            "description": "Determines whether a given integer is prime or not. It returns `false` for numbers less than or equal to 1 and checks divisibility from 2 up to the square root of the number. If no divisors are found, it returns `true`, indicating the number is prime.",
            "params": [
              {
                "name": "num",
                "default_value": null,
                "optional": false,
                "type_name": "number",
                "description": "Tested for primality."
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "`true` if the input number is a prime number and `false` otherwise."
            },
            "usage": {
              "language": "javascript",
              "code": "alert(isPrime(7)); \n",
              "description": ""
            },
            "name": "isPrime",
            "location": {
              "start": 21,
              "insert": 10,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 9,
                "end": 20
              }
            },
            "item_type": "function",
            "length": 7,
            "docLength": 11
          },
          {
            "id": "31f7468d-c34e-a49f-8e4c-5db4d8c12d92",
            "ancestors": [],
            "description": "Identifies and returns the largest element from an array of numbers, starting with the first element as the initial maximum value and updating it if a larger element is found during the iteration.",
            "params": [
              {
                "name": "arr",
                "default_value": null,
                "optional": false,
                "type_name": "number[]",
                "description": "An input array."
              }
            ],
            "returns": {
              "type_name": "number",
              "description": "The maximum element found within the input array."
            },
            "usage": {
              "language": "javascript",
              "code": "let numbers = [12, 45, 7, 23, 56];\nlet max = findMax(numbers);\n// Use max here.",
              "description": ""
            },
            "name": "findMax",
            "location": {
              "start": 42,
              "insert": 33,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 32,
                "end": 41
              }
            },
            "item_type": "function",
            "length": 9,
            "docLength": 9
          },
          {
            "id": "6f533e5e-b0a4-4e88-f54c-ed641f9eccd6",
            "ancestors": [],
            "description": "Aggregates the occurrences of each element in an array, returning an object where the property names are the elements and their values are the counts of each occurrence. The function uses the `reduce` method to achieve this.",
            "params": [
              {
                "name": "arr",
                "default_value": null,
                "optional": false,
                "type_name": "(string | number | boolean | symbol | object | null | undefined)[]",
                "description": "An array of values to be counted."
              }
            ],
            "returns": {
              "type_name": "any",
              "description": "An object where each key corresponds to a unique element from the input array and its corresponding value represents the frequency of that element in the array."
            },
            "usage": {
              "language": "javascript",
              "code": "const results = countOccurrences([1, 2, 2, 3, 3, 3]);\n",
              "description": "\n\nNote: This code creates a dictionary where keys are unique elements from the array and values represent their occurrences."
            },
            "name": "countOccurrences",
            "location": {
              "start": 80,
              "insert": 68,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 67,
                "end": 79
              }
            },
            "item_type": "function",
            "length": 10,
            "docLength": 12
          },
          {
            "id": "fefe49d3-ce30-d996-1f4f-1120f2b85f5e",
            "ancestors": [
              "6f533e5e-b0a4-4e88-f54c-ed641f9eccd6"
            ],
            "description": "Counts elements in an array.",
            "name": null,
            "location": {
              "start": 81,
              "insert": 82,
              "offset": " ",
              "indent": 8,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 8,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "sample.ts",
    "path": "sample.ts",
    "content": {
      "structured": {
        "description": "A React functional component named MathComponent that renders a list of mathematical results using two custom functions add and sin. The add function adds two numbers together, while the sin function calculates the sine of a given angle in radians. The results are displayed as an unordered list with each result labeled with its index.",
        "items": [
          {
            "id": "3dacc4ab-6b84-49af-3f44-99aa92fd7837",
            "ancestors": [],
            "description": "Defines two custom mathematical functions, `add` and `sin`, and combines their results into an array. It then renders a list of these results as HTML, displaying the result number and value for each calculation.",
            "params": [],
            "returns": {
              "type_name": "number | number",
              "description": "An array of two numbers representing the results of mathematical operations."
            },
            "usage": {
              "language": "typescript",
              "code": "function main(): void {\n    ReactDOM.render(<MathComponent />, document.getElementById('root'));\n}\n",
              "description": "\n"
            },
            "name": "MathComponent",
            "location": {
              "start": 2,
              "insert": 2,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 22,
            "docLength": null
          }
        ]
      }
    }
  }
]